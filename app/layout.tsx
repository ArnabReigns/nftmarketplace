import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Appbar from '@/components/Appbar'
import Sidebar from '@/components/Sidebar'
import { Box, ThemeProvider, useTheme } from '@mui/material'
import "./globals.css";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import theme from "@/lib/MuiTheme";
import { AppProvider } from "@/context/AppContext";
import { Bounce, Slide, ToastContainer } from 'react-toastify';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
  modal
}: Readonly<{
  children: React.ReactNode;
  modal: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <AppProvider>

              <Sidebar />
              <Appbar />
              <Box sx={{
                color: 'white',
                paddingLeft: '3.7rem',
                minHeight: '100vh',
                bgcolor: '#111112',
                paddingTop: '3.5rem',
              }}>
                {modal}
                {children}
              </Box>
              <ToastContainer
                position="bottom-right"
                autoClose={800}
                hideProgressBar={false}
                newestOnTop={false}
                closeOnClick={false}
                closeButton={false}
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
                theme="dark"
                transition={Bounce}
              />
            </AppProvider>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
